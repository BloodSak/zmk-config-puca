/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>


#define TIMEOUT 300

#define DEF 0
#define GMG 1
#define NMP 2
#define STG 3

 / {
    macros {
        incoming: incoming {
            compatible = "zmk,behavior-macro";
            label = "ZM_incoming";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <20>;
            bindings
                = <&macro_tap &kp KP_ENTER &kp G &kp L &kp I>
                , <&macro_pause_for_release>
                , <&macro_tap &kp KP_ENTER>
                ;
        };

        incominga: incominga {
            compatible = "zmk,behavior-macro";
            label = "ZM_incominga";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <20>;
            bindings
                = <&macro_tap &kp KP_ENTER &kp G &kp L &kp I &kp KP_MINUS>
                , <&macro_pause_for_release>
                , <&macro_tap &kp KP_ENTER>
                ;
        };

        incomingb: incomingb {
            compatible = "zmk,behavior-macro";
            label = "ZM_incomingb";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <20>;
            bindings
                = <&macro_tap &kp KP_ENTER &kp G &kp L &kp I &kp LS(MINUS)>
                , <&macro_pause_for_release>
                , <&macro_tap &kp KP_ENTER>
                ;
        };

        invis: invis {
            compatible = "zmk,behavior-macro";
            label = "ZM_invis";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <20>;
            bindings
                = <&macro_tap &kp KP_ENTER &kp G &kp L &kp PERIOD &kp G &kp SEMI>
                , <&macro_pause_for_release>
                , <&macro_tap &kp KP_ENTER>
                ;
        };

        invisa: invisa {
            compatible = "zmk,behavior-macro";
            label = "ZM_invisa";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <20>;
            bindings
                = <&macro_tap &kp KP_ENTER &kp G &kp L &kp PERIOD &kp G &kp SEMI &kp KP_MINUS>
                , <&macro_pause_for_release>
                , <&macro_tap &kp KP_ENTER>
                ;
        };

        invisb: invisb {
            compatible = "zmk,behavior-macro";
            label = "ZM_invisb";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <20>;
            bindings
                = <&macro_tap &kp KP_ENTER &kp G &kp L &kp PERIOD &kp G &kp SEMI &kp LS(MINUS)>
                , <&macro_pause_for_release>
                , <&macro_tap &kp KP_ENTER>
                ;
        };

        watchout: watchout {
            compatible = "zmk,behavior-macro";
            label = "ZM_watchout";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <20>;
            bindings
                = <&macro_tap &kp KP_ENTER &kp COMMA &kp A &kp K &kp I &kp J &kp SPACE &kp S &kp F &kp K>
                , <&macro_pause_for_release>
                , <&macro_tap &kp KP_ENTER>
                ;
        };

        watchouta: watchouta {
            compatible = "zmk,behavior-macro";
            label = "ZM_watchouta";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <20>;
            bindings
                = <&macro_tap &kp KP_ENTER &kp COMMA &kp A &kp K &kp I &kp J &kp SPACE &kp S &kp F &kp K &kp KP_MINUS>
                , <&macro_pause_for_release>
                , <&macro_tap &kp KP_ENTER>
                ;
        };

        watchoutb: watchoutb {
            compatible = "zmk,behavior-macro";
            label = "ZM_watchoutb";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <20>;
            bindings
                = <&macro_tap &kp KP_ENTER &kp COMMA &kp A &kp K &kp I &kp J &kp SPACE &kp S &kp F &kp K &kp LS(MINUS)>
                , <&macro_pause_for_release>
                , <&macro_tap &kp KP_ENTER>
                ;
        };

        chata: chata {
            compatible = "zmk,behavior-macro";
            label = "ZM_chata";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <20>;
            bindings
                = <&macro_tap &kp LBKT &kp I &kp J &kp A &kp K &kp SPACE &kp A>
                , <&macro_pause_for_release>
                , <&macro_tap &kp KP_ENTER>
                ;
        };

        chatp: chatp {
            compatible = "zmk,behavior-macro";
            label = "ZM_chatp";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <20>;
            bindings
                = <&macro_tap &kp LBKT &kp I &kp J &kp A &kp K &kp SPACE &kp R>
                , <&macro_pause_for_release>
                , <&macro_tap &kp KP_ENTER>
                ;
        };

        scrmb: scrmb {
            compatible = "zmk,behavior-macro";
            label = "ZM_scrmb";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <20>;
            bindings
                = <&macro_tap &kp KP_MINUS &kp LS(MINUS)>
                ;
        };

        dele: dele {
            compatible = "zmk,behavior-macro";
            label = "ZM_dele";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <20>;
            bindings
                = <&macro_tap &kp LBKT &kp LC(A) &kp BSPC>
                , <&macro_pause_for_release>
                , <&macro_tap &kp KP_ENTER>
                ;
        };

        voide: voide {
            compatible = "zmk,behavior-macro";
            label = "ZM_voide";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <20>;
            bindings
                = <&macro_tap &kp KP_ENTER &kp PERIOD &kp S &kp G &kp H &kp SPACE &kp N1 &kp PERIOD &kp N1 &kp SPACE &kp Y &kp S &kp O &kp SPACE &kp N &kp D &kp H>
                , <&macro_pause_for_release>
                , <&macro_tap &kp KP_ENTER>
                ;
        };


    };
};

 / {
    keymap0: keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default layer";
            bindings = <
                &kp C_MUTE          &trans           &kp C_BRI_DN     &kp C_BRI_UP        &trans
                &kp F10             &kp F11          &kp F12          &to 1               &to 1    
                &kp F7              &kp F8           &kp F9           &kp LC(PERIOD)      &kp LC(PERIOD)  
                &kp F4              &kp F5           &kp F6           &trans              &trans
                &kp F1              &kp F2           &kp F3           &kp KP_ENTER        &kp KP_ENTER
                &kp LC(I)           &kp LC(I)        &mo 3            &mo 3               &kp K_COPY
            >;
            sensor-bindings = < &inc_dec_kp C_VOL_UP C_VOL_DN >;
        };


        numpad_layer {
            label = "numpad layer";
            bindings = <
                &kp C_MUTE          &trans              &kp C_BRI_DN        &kp C_BRI_UP        &trans
                &kp KP_MINUS        &kp KP_DIVIDE       &kp KP_MULTIPLY     &to 2               &to 2   
                &kp KP_N7           &kp KP_N8           &kp KP_N9           &kp KP_PLUS         &kp KP_PLUS   
                &kp KP_N4           &kp KP_N5           &kp KP_N6           &trans              &trans
                &kp KP_N1           &kp KP_N2           &kp KP_N3           &kp KP_ENTER        &kp KP_ENTER
                &kp KP_N0           &kp KP_N0           &kp KP_DOT          &kp KP_DOT          &kp KP_N0
            >;
            sensor-bindings = < &inc_dec_kp C_VOL_UP C_VOL_DN >;
        };


        gamepad_layer {
            label = "gamepad layer";
            bindings = <
                &kp C_MUTE      &trans          &kp C_BRI_DN    &kp C_BRI_UP    &trans
                &chata          &chatp          &kp F11         &to 0           &to 0   
                &watchout       &watchouta      &watchoutb      &scrmb          &scrmb  
                &invis          &invisa         &invisb         &trans          &trans
                &incoming       &incominga      &incomingb      &kp KP_ENTER    &kp KP_ENTER
                &dele           &dele           &voide          &voide          &dele
            >;
            sensor-bindings = < &inc_dec_kp C_VOL_UP C_VOL_DN >;
        };


        settings_layer {
            label = "settings layer";
            bindings = <
                &trans          &trans          &trans          &trans          &trans
                &trans          &trans          &trans          &trans          &trans  
                &trans          &trans          &trans          &bootloader     &bootloader  
                &trans          &trans          &trans          &trans          &trans
                &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_CLR      &bt BT_CLR
                &trans          &trans          &trans          &trans          &trans
            >;
            sensor-bindings = < &inc_dec_kp C_VOL_UP C_VOL_DN >;
        }; 

    };
};